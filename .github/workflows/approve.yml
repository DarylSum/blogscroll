name: Approve Issue

on:
  issue_comment:
    types: [created]

jobs:
  approve:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check comment author and content
        id: check_comment
        uses: actions/github-script@v6
        with:
          script: |
            if (context.payload.comment.user.login === 'dend' && context.payload.comment.body.trim() === '/approved') {
              core.setOutput('approved', 'true');
            } else {
              core.setOutput('approved', 'false');
            }

      - name: Remove 'needs-triage' label and add 'approved'
        if: steps.check_comment.outputs.approved == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const issueLabels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const labels = issueLabels.data.map(label => label.name);

            if (labels.includes('needs-triage')) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'needs-triage'
              });
            }

            if (!labels.includes('approved')) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['approved']
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        if: steps.check_comment.outputs.approved == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: steps.check_comment.outputs.approved == 'true'
        working-directory: util
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check issue number
        if: steps.check_comment.outputs.approved == 'true'
        run: |
          echo "Issue number: ${{ github.event.issue.number }}"

      - name: Run copilot-automation script
        if: steps.check_comment.outputs.approved == 'true'
        run: |
          python -m copilot_automation --session-id ${{ secrets.SESSION_ID }} --issue-id ${{ github.event.issue.number }}
        working-directory: util